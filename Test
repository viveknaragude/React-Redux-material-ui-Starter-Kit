let startTime = ago(30d);  // Set the time range for the last 30 days
let endTime = now();
let serverMetrics = 
    requests
    | where timestamp between (startTime .. endTime)
    | summarize avgResponseTime = avg(duration), 
                totalRequests = count(), 
                failedRequests = countif(success == false) 
                by bin(timestamp, 1d);
let cpuMemoryMetrics = 
    performanceCounters
    | where timestamp between (startTime .. endTime)
    | where counterName == "Process CPU" or counterName == "Available Memory"
    | summarize avgCPU = avgif(counterValue, counterName == "Process CPU"),
                avgMemory = avgif(counterValue, counterName == "Available Memory")
                by bin(timestamp, 1d);
serverMetrics
| join kind=fullouter cpuMemoryMetrics on timestamp
| project timestamp, avgResponseTime, totalRequests, failedRequests, avgCPU, avgMemory
| order by timestamp asc
| render timechart
